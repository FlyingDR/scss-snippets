// Responsive versions of corresponding Susy mixins that takes information from responsive configuration
// They're useful in a case if there is multiple responsive configuration with different layouts that may result 
// into different span sizes especially in a case of layouts that use static math or mixed math in different layouts

$responsive-susy-current-value: null !default;

// Runner for responsive Susy mixins
// 
// @param mixed $key   Either responsive configuration key to take information from or actual information for Suxy mixin 
@mixin responsive-susy-runner($key) {
    @if (r-is-key($key, true)) {
        $default-math: susy-get(math);
        $default-value: r-get($key);
        @include r-each(true) {
            @if (r-has('/layout')) {
                $math: susy-get(math);
                $value: r-get($key, $default-value);
                @if ($math == static) {
                    @if ($value != null) {
                        $responsive-susy-current-value: $value !global;
                        @content;
                    }
                } @else {
                    @if ($value != null and ($value != $default-value or $math != $default-math)) {
                        $responsive-susy-current-value: $value !global;
                        @content;
                    }
                }
            }
        }
    } @else if (not r-is-key($key, false)) {
        @include r-each(true) {
            @if (r-has('/layout')) {
                $responsive-susy-current-value: $key !global;
                @content;
            }
        }
    }
}

@mixin r-span($key) {
    @include responsive-susy-runner($key) {
        @include span($responsive-susy-current-value);
    }
}

@mixin r-span-width($key) {
    @include responsive-susy-runner($key) {
        width: span($responsive-susy-current-value);
    }
}

@mixin r-gutters($key) {
    @include responsive-susy-runner($key) {
        @include gutters($responsive-susy-current-value);
    }
}

@mixin r-container($key) {
    @include responsive-susy-runner($key) {
        @include container($responsive-susy-current-value);
    }
}

@mixin r-container-width($key) {
    @include responsive-susy-runner($key) {
        width: container($responsive-susy-current-value);
    }
}

@mixin r-full($key) {
    @include responsive-susy-runner($key) {
        @include full($responsive-susy-current-value);
    }
}

@mixin r-pre($key) {
    @include responsive-susy-runner($key) {
        @include pre($responsive-susy-current-value);
    }
}

@mixin r-post($key) {
    @include responsive-susy-runner($key) {
        @include post($responsive-susy-current-value);
    }
}

@mixin r-pull($key) {
    @include responsive-susy-runner($key) {
        @include pull($responsive-susy-current-value);
    }
}

@mixin r-prefix($key) {
    @include responsive-susy-runner($key) {
        @include prefix($responsive-susy-current-value);
    }
}

@mixin r-suffix($key) {
    @include responsive-susy-runner($key) {
        @include suffix($responsive-susy-current-value);
    }
}

@mixin r-bleed($key) {
    @include responsive-susy-runner($key) {
        @include bleed($responsive-susy-current-value);
    }
}

@mixin r-bleed-x($key) {
    @include responsive-susy-runner($key) {
        @include bleed-x($responsive-susy-current-value);
    }
}

@mixin r-bleed-y($key) {
    @include responsive-susy-runner($key) {
        @include bleed-y($responsive-susy-current-value);
    }
}

@mixin r-isolate($key) {
    @include responsive-susy-runner($key) {
        @include isolate($responsive-susy-current-value);
    }
}

@mixin r-gallery($key) {
    @include responsive-susy-runner($key) {
        @include gallery($responsive-susy-current-value);
    }
}
