@import "units";

// Parse given value of box parameter
//
// @param int|string|list $value    Box parameter value to parse
// @param boolean $margin           true to parse value for margin, false to parse it for padding
// @return string
@function parse-box-value($value, $margin) {
    $result: ();
    @each $v in $value {
        @if (($margin and $v == auto) or (type-of($v) == number and unit($v) == '%')) {
            $v: $v;
        } @else if (type-of($v) == number) {
            $v: v($v);
        } @else {
            @warn "Unknown value for box offset: " + $v;
        }
        $result: append($result, $v);
    }
    @if (length($result) > 4) {
        $result: (nth($result, 1), nth($result, 2), nth($result, 3), nth($result, 4));
    } @else if (length($result) == 0) {
        $result: (0);
    }
    $result: join($result, (), space);
    @return $result;
}

// Render padding CSS property with given value
//
// @param int|string|list $value    Padding value
@mixin padding($value) {
    padding: parse-box-value($value, false);
}

// Render padding CSS property based on information into given key within responsive configuration
//
// @param string $key   Responsive configuration key to get padding value from
@mixin r-padding($key) {
    //noinspection SassScssResolvedByNameOnly
    @if (function-exists(is-responsive) and is-responsive()) {
        @include r-each-if($key) {
            @include padding(r-get($key));
        }
    }
}

// Render margin CSS property with given value
//
// @param int|string|list $value    Margin value
@mixin margin($value) {
    margin: parse-box-value($value, true);
}

// Render margin CSS property based on information into given key within responsive configuration
//
// @param string $key   Responsive configuration key to get margin value from
@mixin r-margin($key) {
    //noinspection SassScssResolvedByNameOnly
    @if (function-exists(is-responsive) and is-responsive()) {
        @include r-each-if($key) {
            @include margin(r-get($key));
        }
    }
}

// Render box parameters (margin, padding) based on information into given key within responsive configuration
//
// @param string $key   Responsive configuration key to get box parameters values from
@mixin r-box($key) {
    //noinspection SassScssResolvedByNameOnly
    @if (function-exists(is-responsive) and is-responsive()) {
        @include r-each($key) {
            @if (r-has($key + '/margin')) {
                @include margin(r-get($key + '/margin'));
            }
            @if (r-has($key + '/padding')) {
                @include padding(r-get($key + '/padding'));
            }
        }
    }
}
